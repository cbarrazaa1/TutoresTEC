{"version":3,"sources":["img/userprofile.png","context/UserContext.jsx","components/Post.jsx","components/SideBar.jsx","components/Notification.jsx","views/NotificationsView.jsx","components/CourseToken.jsx","components/CourseTokenizer.jsx","views/BecomeTutorView.jsx","views/CreatePostView.jsx","components/TutorSearchRow.jsx","views/SearchView.jsx","views/HomeView.jsx","views/LoginView.jsx","views/SignUpView.jsx","MainRouter.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","UserContext","React","UserContextProvider","children","useState","user","setUser","Provider","value","styles","card","marginBottom","Post","title","author","description","Card","Body","Title","Subtitle","style","Text","Link","href","container","display","flexDirection","width","minWidth","maxWidth","height","borderRight","position","profileImg","alignItems","justifyContent","borderRadius","alignSelf","marginLeft","marginTop","profileContainer","userNameText","margin","tutorBtnContainer","listItem","icon","withRouter","history","activeIndex","setActiveIndex","useContext","isActive","index","onOptionClick","push","Image","src","require","name","ListGroup","as","variant","Item","action","active","onClick","Button","block","Cookies","set","replace","root","borderTop","text","padding","time","fontSize","color","Notification","hasBottomBorder","borderBottom","flex","fontWeight","NotificationsView","token","backgroundColor","marginRight","boxShadow","closeIcon","CourseToken","allowDelete","onDeletePress","size","tokenContainer","flexWrap","CourseTokenizer","tokens","showBody","content","length","map","key","_id","momentLocalizer","localizer","moment","combobox","form","formTitle","calendar","confirmButton","BecomeTutorView","setSelectedBachelor","bachelors","setBachelors","courses","setCourses","selectedCourses","setSelectedCourses","selectedDates","setSelectedDates","courseCombobox","useRef","useEffect","a","fetch","method","response","json","bachelorName","fetchBachelors","onSelectBachelor","bachelor","onConfirmClick","headers","body","JSON","stringify","userID","courseIDs","course","sessions","console","log","Form","Group","Label","Control","onChange","i","shortName","ref","e","selectedCourse","target","prev","filter","concat","current","code","selectable","events","defaultView","Views","WEEK","onSelectSlot","start","end","date","tutor","student","status","onSelectEvent","views","setTitle","setContent","onCreatePostClick","preventDefault","alert","success","post","type","placeholder","subtitle","tokenizerContainer","TutorSearchRow","Badge","rating","ratingCount","SearchView","selectedIndex","setSelectedIndex","topTutors","setTopTutors","results","setResults","query","setQuery","users","fetchTopTutors","onInputChange","onFormSubmit","Header","Nav","defaultActiveKey","eventKey","onSubmit","options","posts","setPosts","fetchPosts","paddingLeft","exact","path","button","email","setEmail","password","setPassword","onLoginClick","credentials","InputGroup","Prepend","Footer","to","setName","confirmedPassword","setConfirmedPassword","semester","setSemester","setBachelor","bachelorList","setBachelorList","getBachelorList","onSignUpClick","message","Row","Col","className","min","MainRouter","isValidToken","setIsValidToken","checkToken","App","useDimensions","navbar","paddingTop","Navbar","bg","fixed","Brand","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd801a11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/userprofile.d4961a54.png\";","import * as React from 'react';\r\nimport {useState} from 'react';\r\n\r\nconst UserContext = React.createContext(null);\r\nexport function UserContextProvider({children}) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  return <UserContext.Provider value={{user, setUser}}>{children}</UserContext.Provider>;\r\n}\r\n\r\nexport default UserContext;\r\n","import * as React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Post({title, author, description}) {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>{title}</Card.Title>\r\n        <Card.Subtitle style={styles.card}>\r\n          Posted by <Link>@{author}</Link>\r\n        </Card.Subtitle>\r\n        <Card.Text>{description}</Card.Text>\r\n        <Card.Link href=\"#\">Send message</Card.Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  card: {\r\n    marginBottom: '12px',\r\n  },\r\n};\r\nexport default Post;\r\n","import Cookies from 'js-cookie';\r\nimport * as React from 'react';\r\nimport {useContext, useState} from 'react';\r\nimport {Button, Image, ListGroup} from 'react-bootstrap';\r\nimport {FaChalkboardTeacher, FaHome, FaInbox, FaSearch} from 'react-icons/fa';\r\nimport {FiPower} from 'react-icons/fi';\r\nimport {IoIosNotifications} from 'react-icons/io';\r\nimport {withRouter} from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\n\r\nfunction SideBar({history}) {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const {user} = useContext(UserContext);\r\n\r\n  const isActive = index => {\r\n    return index === activeIndex;\r\n  };\r\n\r\n  const onOptionClick = index => {\r\n    switch (index) {\r\n      case 0:\r\n        history.push('/home');\r\n        break;\r\n      case 1:\r\n        history.push('/home/search');\r\n        break;\r\n      case 2:\r\n        history.push('/home/notifications');\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        break;\r\n    }\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const onBecomeTutorClick = () => {\r\n    history.push('/home/becometutor');\r\n    setActiveIndex(-1);\r\n  };\r\n\r\n  const onLogoutClick = () => {\r\n    Cookies.set('jwt', '');\r\n    history.replace('/');\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.profileContainer}>\r\n        <Image\r\n          style={styles.profileImg}\r\n          src={require('../img/userprofile.png')}\r\n        />\r\n        {user != null && <p style={styles.userNameText}>Hello {user.name}!</p>}\r\n      </div>\r\n      <ListGroup as=\"ul\" variant=\"flush\">\r\n        <ListGroup.Item\r\n          style={styles.listItem}\r\n          action\r\n          active={isActive(0)}\r\n          onClick={() => onOptionClick(0)}\r\n        >\r\n          <FaHome style={styles.icon}></FaHome>\r\n          Home\r\n        </ListGroup.Item>\r\n        <ListGroup.Item\r\n          style={styles.listItem}\r\n          action\r\n          active={isActive(1)}\r\n          onClick={() => onOptionClick(1)}\r\n        >\r\n          <FaSearch style={styles.icon}></FaSearch>\r\n          Search\r\n        </ListGroup.Item>\r\n        <ListGroup.Item\r\n          style={styles.listItem}\r\n          action\r\n          active={isActive(2)}\r\n          onClick={() => onOptionClick(2)}\r\n        >\r\n          <IoIosNotifications style={styles.icon}></IoIosNotifications>\r\n          Notifications\r\n        </ListGroup.Item>\r\n        <ListGroup.Item\r\n          style={styles.listItem}\r\n          action\r\n          active={isActive(3)}\r\n          onClick={() => onOptionClick(3)}\r\n        >\r\n          <FaInbox style={styles.icon}></FaInbox>\r\n          Inbox\r\n        </ListGroup.Item>\r\n        <ListGroup.Item\r\n          style={styles.listItem}\r\n          action\r\n          active={isActive(4)}\r\n          onClick={() => onOptionClick(4)}\r\n        >\r\n          <FaChalkboardTeacher style={styles.icon}></FaChalkboardTeacher>\r\n          My tutors\r\n        </ListGroup.Item>\r\n        <ListGroup.Item style={styles.tutorBtnContainer}>\r\n          <Button variant=\"primary\" block onClick={onBecomeTutorClick}>\r\n            Become tutor\r\n          </Button>\r\n        </ListGroup.Item>\r\n        <ListGroup.Item style={styles.listItem} action onClick={onLogoutClick}>\r\n          <FiPower style={styles.icon}></FiPower>\r\n          Logout\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '350px',\r\n    minWidth: '350px',\r\n    maxWidth: '350px',\r\n    height: '100%',\r\n    borderRight: '#dbdbdb solid 1px',\r\n    position: 'fixed',\r\n  },\r\n  profileImg: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRadius: '50%',\r\n    width: '40px',\r\n    height: '40px',\r\n    alignSelf: 'flex-start',\r\n    marginLeft: '10px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n  },\r\n  profileContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  userNameText: {\r\n    margin: 0,\r\n    marginLeft: '8px',\r\n  },\r\n  tutorBtnContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    margin: '8px',\r\n  },\r\n};\r\n\r\nexport default withRouter(SideBar);\r\n","import * as React from 'react';\r\n\r\nfunction Notification({text, hasBottomBorder, time}) {\r\n  return (\r\n    <div style={{...styles.root, borderBottom: hasBottomBorder ? '0.5px #dbdbdb solid' : 'none'}}>\r\n      <p style={styles.text}>{text}</p>\r\n      <p style={styles.time}>{time}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    width: '100%',\r\n    height: '64px',\r\n    borderTop: '0.5px #dbdbdb solid',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  text: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  time: {\r\n    padding: 0,\r\n    margin: 0,\r\n    fontSize: 12,\r\n    color: 'gray',\r\n  },\r\n};\r\n\r\nexport default Notification;\r\n","import * as React from 'react';\r\nimport Notification from '../components/Notification';\r\n\r\nfunction NotificationsView() {\r\n  return (\r\n    <div style={styles.root}>\r\n      <h3 style={styles.title}>Notifications</h3>\r\n      <div style={styles.container}>\r\n        <Notification\r\n          text=\"You received a message from @isabelcruz!\"\r\n          time=\"3 days ago\"\r\n          hasBottomBorder={false}\r\n        />\r\n        <Notification\r\n          text=\"@isabelcruz scheduled a tutoring session with you.\"\r\n          time=\"4 days ago\"\r\n          hasBottomBorder={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: '10px',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    fontWeight: 200,\r\n  },\r\n  container: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n};\r\n\r\nexport default NotificationsView;\r\n","import * as React from 'react';\r\nimport {IoIosCloseCircleOutline} from 'react-icons/io';\r\n\r\nfunction CourseToken({text, allowDelete, onDeletePress}) {\r\n  return (\r\n    <div style={styles.token}>\r\n      {text}\r\n      {allowDelete && (\r\n        <IoIosCloseCircleOutline\r\n          onClick={onDeletePress}\r\n          style={styles.closeIcon}\r\n          size={16}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  token: {\r\n    backgroundColor: '#007bff',\r\n    color: '#FFFFFF',\r\n    marginRight: '6px',\r\n    marginBottom: '6px',\r\n    padding: '6px 10px 6px 10px',\r\n    borderRadius: '10px',\r\n    fontSize: 14,\r\n    boxShadow: '0px 2px 4px 0px rgba(0, 0, 0, 0.20)',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  closeIcon: {\r\n    marginLeft: '8px',\r\n  },\r\n};\r\n\r\nexport default CourseToken;\r\n","import * as React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport {useState} from 'react';\r\nimport CourseToken from './CourseToken';\r\n\r\nfunction CourseTokenizer({tokens, allowDelete, onDeletePress, showBody}) {\r\n  const content = (\r\n    <div style={styles.tokenContainer}>\r\n      {tokens.length === 0\r\n        ? 'No selected courses'\r\n        : tokens.map(token => (\r\n            <CourseToken\r\n              key={token._id}\r\n              text={token.name}\r\n              allowDelete={allowDelete}\r\n              onDeletePress={() => onDeletePress(token)}\r\n            />\r\n          ))}\r\n    </div>\r\n  );\r\n\r\n  return showBody ? (\r\n    <Card>\r\n      <Card.Body>{content}</Card.Body>\r\n    </Card>\r\n  ) : (\r\n    content\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  tokenContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n};\r\n\r\nexport default CourseTokenizer;\r\n","import * as React from 'react';\r\nimport {Button, Card, Form, InputGroup} from 'react-bootstrap';\r\nimport CourseTokenizer from '../components/CourseTokenizer';\r\nimport {useEffect, useState, useRef, useContext} from 'react';\r\nimport localizer from 'react-big-calendar/lib/localizers/moment';\r\nimport {Calendar, Views} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst momentLocalizer = localizer(moment);\r\n\r\nfunction BecomeTutorView() {\r\n  const [selectedBachelor, setSelectedBachelor] = useState({});\r\n  const [bachelors, setBachelors] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedCourses, setSelectedCourses] = useState([]);\r\n  const [selectedDates, setSelectedDates] = useState([]);\r\n  const courseCombobox = useRef(null);\r\n  const {user} = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function fetchBachelors() {\r\n      let response = await fetch('http://localhost:3001/api/bachelors/all', {\r\n        method: 'GET',\r\n      });\r\n\r\n      let json = await response.json();\r\n      setBachelors(json.bachelors);\r\n      setSelectedBachelor(json.bachelors[0]);\r\n\r\n      // fetch related courses\r\n      const bachelorName = json.bachelors[0].name;\r\n      response = await fetch(\r\n        `http://localhost:3001/api/courses/all?bachelor=${bachelorName}`,\r\n        {\r\n          method: 'GET',\r\n        },\r\n      );\r\n      json = await response.json();\r\n      setCourses(json.courses);\r\n    }\r\n\r\n    fetchBachelors();\r\n  }, []);\r\n\r\n  const onSelectBachelor = async bachelor => {\r\n    setSelectedBachelor(bachelor);\r\n    const response = await fetch(\r\n      `http://localhost:3001/api/courses/all?bachelor=${bachelor.name}`,\r\n      {\r\n        method: 'GET',\r\n      },\r\n    );\r\n    const json = await response.json();\r\n    setCourses(json.courses);\r\n  };\r\n\r\n  const onSelectCourse = e => {\r\n    const selectedCourse = courses[e.target.value];\r\n    console.log(selectedCourse);\r\n    setCourses(prev =>\r\n      prev.filter(course => course._id !== selectedCourse._id),\r\n    );\r\n    setSelectedCourses(prev => prev.concat(selectedCourse));\r\n    courseCombobox.current.value = 'Select course...';\r\n  };\r\n\r\n  const onTokenDelete = token => {\r\n    setCourses(prev => prev.concat(token));\r\n    setSelectedCourses(prev => prev.filter(course => course !== token));\r\n  };\r\n\r\n  const onCreateEvent = ({start, end}) => {\r\n    for (let date of selectedDates) {\r\n      if (\r\n        (start > date.start && start < date.end) ||\r\n        (date.start >= start && date.start <= end)\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    setSelectedDates(prev =>\r\n      prev.concat({start, end, tutor: user._id, student: null, status: 'open'}),\r\n    );\r\n  };\r\n\r\n  const onSelectEvent = ({start, end}) => {\r\n    setSelectedDates(prev =>\r\n      prev.filter(date => start !== date.start && end !== date.end),\r\n    );\r\n  };\r\n\r\n  const onConfirmClick = async () => {\r\n    const response = await fetch(\r\n      'http://localhost:3001/api/users/becometutor',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userID: user._id,\r\n          courseIDs: selectedCourses.map(course => course._id),\r\n          sessions: selectedDates,\r\n        }),\r\n      },\r\n    );\r\n\r\n    const json = await response.json();\r\n    console.log(json);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.root}>\r\n      <h3 style={styles.title}>Become A Tutor</h3>\r\n      <Card>\r\n        <Card.Body>\r\n          Do you feel confident in a specific set of courses? Would you like to\r\n          share what you know and help others that are in need? Become a\r\n          TutoresTEC tutor! It's free!\r\n          <br />\r\n          <br />\r\n          Becoming a tutor will facilitate other users to find you and ask for\r\n          help via TutoresTEC. All you need to do is tell us for which courses\r\n          you'd like to become a tutor and a schedule for when you're available\r\n          for tutoring sessions.\r\n          <hr />\r\n          <Card.Title>Courses</Card.Title>\r\n          Pick the courses you'd like to offer tutorings for.\r\n          <Form style={styles.form}>\r\n            <Form.Group>\r\n              <Form.Label style={styles.formTitle}>Bachelor</Form.Label>\r\n              <Form.Control\r\n                style={styles.combobox}\r\n                as=\"select\"\r\n                onChange={onSelectBachelor}\r\n              >\r\n                {bachelors.map((bachelor, i) => (\r\n                  <option\r\n                    key={bachelor._id}\r\n                    value={i}\r\n                  >{`${bachelor.name} (${bachelor.shortName})`}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                ref={courseCombobox}\r\n                style={styles.combobox}\r\n                as=\"select\"\r\n                onChange={onSelectCourse}\r\n              >\r\n                <option>Select course...</option>\r\n                {courses.map((course, i) => (\r\n                  <option key={course._id} value={i}>\r\n                    {course.code}: {course.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <CourseTokenizer\r\n              tokens={selectedCourses}\r\n              onDeletePress={onTokenDelete}\r\n            />\r\n          </Form>\r\n          <hr />\r\n          <Card.Title>Schedule</Card.Title>\r\n          Pick times in which you are available to offer tutoring sessions. You\r\n          can change it later.\r\n          <Calendar\r\n            style={styles.calendar}\r\n            selectable={true}\r\n            localizer={momentLocalizer}\r\n            events={selectedDates}\r\n            defaultView={Views.WEEK}\r\n            onSelectSlot={onCreateEvent}\r\n            onSelectEvent={onSelectEvent}\r\n            views={['week']}\r\n          />\r\n          <div style={{display: 'flex', flexDirection: 'column'}}>\r\n            <br />\r\n            Upon clicking confirm, you'll have a tutor profile and will appear\r\n            in the search list!\r\n            <Button style={styles.confirmButton} onClick={onConfirmClick}>\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: '10px',\r\n    flexDirection: 'column',\r\n  },\r\n  title: {\r\n    fontWeight: 200,\r\n  },\r\n  combobox: {\r\n    width: '50%',\r\n  },\r\n  form: {\r\n    marginTop: '8px',\r\n  },\r\n  formTitle: {\r\n    fontSize: 16,\r\n    fontWeight: 500,\r\n  },\r\n  calendar: {\r\n    height: '500px',\r\n    marginTop: '12px',\r\n  },\r\n  confirmButton: {\r\n    marginTop: '8px',\r\n    width: '20%',\r\n  },\r\n};\r\n\r\nexport default BecomeTutorView;\r\n","import * as React from 'react';\r\nimport {useContext, useState, useEffect} from 'react';\r\nimport UserContext from '../context/UserContext';\r\nimport {Form, Button, Card} from 'react-bootstrap';\r\nimport {FiPlusCircle} from 'react-icons/fi';\r\nimport {Router, Link, withRouter} from 'react-router-dom';\r\n\r\nfunction CreatePostView({history}) {\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const {user} = useContext(UserContext);\r\n\r\n  const onTitleChange = e => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onContentChange = e => {\r\n    setContent(e.target.value);\r\n  };\r\n\r\n  const onCreatePostClick = async e => {\r\n    e.preventDefault();\r\n\r\n    if (title === '' || content === '') {\r\n      alert('Please fill in all requested information');\r\n      return;\r\n    }\r\n    const url = 'http://localhost:3001/api/posts/create';\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        author: user._id,\r\n        title: title,\r\n        content: content,\r\n      }),\r\n    });\r\n    const json = await response.json();\r\n    if (json.success) {\r\n      alert('Post created successfully');\r\n      history.replace('/home');\r\n    }\r\n    console.log(json.post);\r\n  };\r\n  return (\r\n    <div style={styles.root}>\r\n      <h3 style={styles.title}>Create Post</h3>\r\n      <Form>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Title\"\r\n            onChange={onTitleChange}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder=\"Content\"\r\n            type=\"text\"\r\n            onChange={onContentChange}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Button variant=\"primary\" onClick={onCreatePostClick}>\r\n            Create Post\r\n          </Button>{' '}\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: '10px',\r\n  },\r\n  title: {\r\n    fontWeight: 200,\r\n  },\r\n};\r\n\r\nexport default withRouter(CreatePostView);\r\n","import * as React from 'react';\r\nimport {Badge, Card} from 'react-bootstrap';\r\nimport {FaStar} from 'react-icons/fa';\r\nimport CourseTokenizer from './CourseTokenizer';\r\n\r\nfunction TutorSearchRow({tutor}) {\r\n  return (\r\n    <Card style={styles.root}>\r\n      <Card.Body>\r\n        <Card.Subtitle style={styles.subtitle}>\r\n          {tutor.name}{' '}\r\n          <Badge style={{marginLeft: '8px'}} variant=\"secondary\">\r\n            {tutor.bachelor.shortName}\r\n          </Badge>\r\n        </Card.Subtitle>\r\n        Rating: {tutor.rating} / 5 ({tutor.ratingCount} reviews)\r\n        <br />\r\n        Courses\r\n        <div style={styles.tokenizerContainer}>\r\n          <CourseTokenizer\r\n            tokens={tutor.courses}\r\n            allowDelete={false}\r\n            showBody={false}\r\n          />\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    marginBottom: '10px',\r\n  },\r\n  subtitle: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  tokenizerContainer: {\r\n    marginTop: '4px',\r\n  },\r\n};\r\n\r\nexport default TutorSearchRow;\r\n","import * as React from 'react';\r\nimport {Card, Nav, Form, Button} from 'react-bootstrap';\r\nimport {useState, useEffect} from 'react';\r\nimport TutorSearchRow from '../components/TutorSearchRow';\r\n\r\nfunction SearchView() {\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [topTutors, setTopTutors] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchTopTutors() {\r\n      const response = await fetch(\r\n        'http://localhost:3001/api/users/toprated?populated=true',\r\n        {\r\n          method: 'GET',\r\n        },\r\n      );\r\n\r\n      const json = await response.json();\r\n      setTopTutors(json.users);\r\n    }\r\n\r\n    fetchTopTutors();\r\n  }, []);\r\n\r\n  const onNavClick = index => {\r\n    setSelectedIndex(index);\r\n  };\r\n\r\n  const onInputChange = e => {\r\n    if (query === '') {\r\n      setResults([]);\r\n    }\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const onFormSubmit = async e => {\r\n    e.preventDefault();\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    const response = await fetch(\r\n      `http://localhost:3001/api/users/search?q=${query}&populated=true`,\r\n      {\r\n        method: 'GET',\r\n      },\r\n    );\r\n    const json = await response.json();\r\n    if (json.users.length === 0) {\r\n      alert('No results!');\r\n      return;\r\n    }\r\n\r\n    if (selectedIndex === 0) {\r\n      // tutors\r\n      setResults(json.users);\r\n    } else {\r\n      // courses\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.root}>\r\n      <h3 style={styles.title}>Search</h3>\r\n      <Card>\r\n        <Card.Header>\r\n          <Nav variant=\"tabs\" defaultActiveKey=\"Tutors\">\r\n            <Nav.Item onClick={() => onNavClick(0)}>\r\n              <Nav.Link eventKey=\"Tutors\">Tutors</Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Form\r\n            style={{display: 'flex', flexDirection: 'row'}}\r\n            onSubmit={onFormSubmit}\r\n          >\r\n            {selectedIndex === 0 ? (\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search for author name...\"\r\n                onChange={onInputChange}\r\n              />\r\n            ) : (\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Search for courses...\"\r\n                onChange={onInputChange}\r\n              />\r\n            )}\r\n            <Button type=\"submit\" style={{marginLeft: '8px'}}>\r\n              Search\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <h5 style={styles.subtitle}>Top-rated Tutors</h5>\r\n      {results.length === 0\r\n        ? selectedIndex === 0 &&\r\n          topTutors.map(tutor => <TutorSearchRow tutor={tutor} />)\r\n        : query === '' &&\r\n          selectedIndex === 0 &&\r\n          topTutors.map(tutor => <TutorSearchRow tutor={tutor} />)}\r\n      {selectedIndex === 0 &&\r\n        results.map(tutor => <TutorSearchRow tutor={tutor} />)}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    flex: 1,\r\n    padding: '10px',\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n  },\r\n  title: {\r\n    fontWeight: 200,\r\n  },\r\n  subtitle: {\r\n    marginTop: '12px',\r\n  },\r\n};\r\n\r\nexport default SearchView;\r\n","import * as React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport {FiPlusCircle} from 'react-icons/fi';\r\nimport {Button} from 'react-bootstrap';\r\nimport Post from '../components/Post';\r\nimport SideBar from '../components/SideBar';\r\nimport NotificationsView from './NotificationsView';\r\nimport BecomeTutorView from './BecomeTutorView';\r\nimport CreatePostView from './CreatePostView';\r\nimport SearchView from './SearchView';\r\n\r\nfunction HomeView({history}) {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      const url = 'http://localhost:3001/api/posts/all?populated=true';\r\n      const response = await fetch(url, {\r\n        method: 'GET',\r\n      });\r\n      const json = await response.json();\r\n      setPosts(json.posts);\r\n    }\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const onCreatePostClick = e => {\r\n    e.preventDefault();\r\n    history.push('/home/createPost');\r\n  };\r\n\r\n  return (\r\n    <div style={styles.root}>\r\n      <SideBar />\r\n      <div style={{paddingLeft: 350, flex: 1}}>\r\n        <Switch>\r\n          <Route exact path=\"/home\">\r\n            <div style={styles.container}>\r\n              <h3 style={styles.title}>Latest Posts</h3>\r\n              <div style={styles.options}>\r\n                <Button variant=\"success\" onClick={onCreatePostClick}>\r\n                  <FiPlusCircle></FiPlusCircle> Create Post\r\n                </Button>\r\n              </div>\r\n\r\n              {posts.map(post => {\r\n                return (\r\n                  <Post\r\n                    key={post._id}\r\n                    title={post.title}\r\n                    author={post.author.name}\r\n                    description={post.content}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          </Route>\r\n          <Route exact path=\"/home/notifications\">\r\n            <NotificationsView />\r\n          </Route>\r\n          <Route exact path=\"/home/becometutor\">\r\n            <BecomeTutorView />\r\n          </Route>\r\n          <Route exact path=\"/home/createPost\">\r\n            <CreatePostView />\r\n          </Route>\r\n          <Route exact path=\"/home/search\">\r\n            <SearchView />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  title: {\r\n    fontWeight: 200,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    flex: 1,\r\n    padding: '10px',\r\n  },\r\n  options: {\r\n    marginBottom: '10px',\r\n  },\r\n};\r\n\r\nexport default withRouter(HomeView);\r\n","import * as React from 'react';\r\nimport {useContext, useState} from 'react';\r\nimport {Button, Card, Form, InputGroup} from 'react-bootstrap';\r\nimport {MdEmail, MdLock} from 'react-icons/md';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\n\r\nfunction LoginView({history}) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const {setUser} = useContext(UserContext);\r\n\r\n  const onEmailChange = e => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onLoginClick = async e => {\r\n    e.preventDefault();\r\n\r\n    if (email === '') {\r\n      alert('Please enter your email.');\r\n      return;\r\n    }\r\n\r\n    if (password === '') {\r\n      alert('Please enter your password.');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch('http://localhost:3001/api/auth/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify({email, password}),\r\n    });\r\n    const json = await response.json();\r\n\r\n    if (json.success) {\r\n      setUser(json.user);\r\n      history.push('/home');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Card style={styles.card}>\r\n        <Card.Body>\r\n          <Form.Group>\r\n            <h2>Login</h2>\r\n            <p>Enter your login information below.</p>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <MdEmail />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control placeholder=\"Email\" type=\"email\" onChange={onEmailChange} />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <MdLock />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control placeholder=\"Password\" type=\"password\" onChange={onPasswordChange} />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Button style={styles.button} onClick={onLoginClick}>\r\n            Login\r\n          </Button>\r\n        </Card.Body>\r\n\r\n        <Card.Footer>\r\n          Don't have an account? <Link to=\"/signup\">Sign up here!</Link>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    width: '30%',\r\n    minWidth: '300px',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n  },\r\n};\r\n\r\nexport default withRouter(LoginView);\r\n","import * as React from 'react';\r\nimport {useContext, useState, useEffect} from 'react';\r\nimport {Button, Card, Col, Form, InputGroup} from 'react-bootstrap';\r\nimport {FaGraduationCap} from 'react-icons/fa';\r\nimport {IoIosRocket} from 'react-icons/io';\r\nimport {MdEmail, MdLock, MdPerson} from 'react-icons/md';\r\nimport {withRouter} from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\n\r\nfunction SignUpView({history}) {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmedPassword, setConfirmedPassword] = useState('');\r\n  const [semester, setSemester] = useState('');\r\n  const [bachelor, setBachelor] = useState('');\r\n  const [bachelorList, setBachelorList] = useState([]);\r\n  const {setUser} = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function getBachelorList() {\r\n      const response = await fetch('http://localhost:3001/api/bachelors/all', {\r\n        method: 'GET',\r\n      });\r\n\r\n      const json = await response.json();\r\n      setBachelorList(json.bachelors);\r\n      setBachelor(json.bachelors[0]._id);\r\n    }\r\n    getBachelorList();\r\n  }, []);\r\n\r\n  const onEmailChange = e => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onNameChange = e => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onConfirmedPasswordChange = e => {\r\n    setConfirmedPassword(e.target.value);\r\n  };\r\n\r\n  const onSemesterChange = e => {\r\n    setSemester(e.target.value);\r\n  };\r\n\r\n  const onBachelorChange = e => {\r\n    console.log(e.target.value);\r\n    setBachelor(e.target.value);\r\n  };\r\n\r\n  const onSignUpClick = async e => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      email === '' ||\r\n      name === '' ||\r\n      password === '' ||\r\n      confirmedPassword === '' ||\r\n      semester === '' ||\r\n      bachelor === ''\r\n    ) {\r\n      alert('Please fill in all requested information.');\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmedPassword) {\r\n      alert('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    const response = await fetch('http://localhost:3001/api/auth/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      credentials: 'include',\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n        name,\r\n        semester,\r\n        bachelor,\r\n      }),\r\n    });\r\n    const json = await response.json();\r\n    if (json.success) {\r\n      setUser(json.user);\r\n      history.push('/home');\r\n    } else {\r\n      alert(json.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <Card style={styles.card}>\r\n        <Card.Body>\r\n          <Form.Group>\r\n            <h2>Create account</h2>\r\n            <p>Tell us a bit about yourself.</p>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <MdEmail />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                placeholder=\"Email\"\r\n                type=\"email\"\r\n                onChange={onEmailChange}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text>\r\n                  <MdPerson />\r\n                </InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                placeholder=\"Name\"\r\n                type=\"text\"\r\n                onChange={onNameChange}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <InputGroup className=\"mb-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>\r\n                    <MdLock />\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                  onChange={onPasswordChange}\r\n                />\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <Form.Control\r\n                placeholder=\"Confirm password\"\r\n                type=\"password\"\r\n                onChange={onConfirmedPasswordChange}\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Label>School information</Form.Label>\r\n          <Form.Row>\r\n            <Form.Group as={Col}>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>\r\n                    <FaGraduationCap />\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control as=\"select\" onChange={onBachelorChange}>\r\n                  {bachelorList.map(bachelor => (\r\n                    <option>{bachelor.shortName}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </InputGroup>\r\n            </Form.Group>\r\n\r\n            <Form.Group as={Col}>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>\r\n                    <IoIosRocket />\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  placeholder=\"Semester\"\r\n                  type=\"number\"\r\n                  onChange={onSemesterChange}\r\n                  min={0}\r\n                />\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Button style={styles.button} onClick={onSignUpClick}>\r\n            Sign Up\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    width: '35%',\r\n    minWidth: '300px',\r\n  },\r\n  button: {\r\n    width: '100%',\r\n  },\r\n};\r\n\r\nexport default withRouter(SignUpView);\r\n","import * as React from 'react';\r\nimport {useContext, useEffect, useState} from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport UserContext from './context/UserContext';\r\nimport HomeView from './views/HomeView';\r\nimport LoginView from './views/LoginView';\r\nimport SignUpView from './views/SignUpView';\r\n\r\nfunction MainRouter() {\r\n  const [isValidToken, setIsValidToken] = useState(false);\r\n  const {setUser} = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    async function checkToken() {\r\n      const response = await fetch(\r\n        'http://localhost:3001/api/auth/validateToken',\r\n        {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        },\r\n      );\r\n      const json = await response.json();\r\n      setIsValidToken(json.success);\r\n      setUser(json.user);\r\n    }\r\n    checkToken();\r\n  }, []);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact={true} path=\"/\">\r\n        {isValidToken ? <Redirect to=\"/home\" /> : <LoginView />}\r\n      </Route>\r\n      <Route path=\"/signup\">\r\n        <SignUpView />\r\n      </Route>\r\n      <Route path=\"/home\">\r\n        <HomeView />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default MainRouter;\r\n","import React from 'react';\r\nimport {Navbar} from 'react-bootstrap';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport useDimensions from 'react-use-dimensions';\r\nimport './App.css';\r\nimport {UserContextProvider} from './context/UserContext';\r\nimport MainRouter from './MainRouter';\r\n\r\nfunction App() {\r\n  const [navbar, {height}] = useDimensions();\r\n\r\n  return (\r\n    <div style={{height: `calc(100% - ${height}px)`, paddingTop: height}}>\r\n      <Navbar ref={navbar} bg=\"primary\" variant=\"dark\" fixed=\"top\">\r\n        <Navbar.Brand>TutoresTEC</Navbar.Brand>\r\n      </Navbar>\r\n      <BrowserRouter>\r\n        <UserContextProvider>\r\n          <MainRouter />\r\n        </UserContextProvider>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-big-calendar/lib/sass/styles.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}